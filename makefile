LANG_FOLDER				:= lang
INCLUDE_FOLDER		:= include
SOURCE_FOLDER			:= src
TEST_FOLDER				:= test
GENERATED_FOLDER	:= generated

CXX								:= g++
CXXFLAGS					:= -std=c++14 -g3 -Wall -Wextra -I $(INCLUDE_FOLDER)

FLEX							:= flex
FLEX_SOURCE				:= $(LANG_FOLDER)/lex.l
FLEX_GENERATED		:= lex.yy.c

BISON							:= bison
BISONFLAGS				:= -d -Wall
BISON_SOURCE			:= $(LANG_FOLDER)/grammar.y
BISON_GENERATED 	:= grammar.tab.*

GENERATED_FILES 	:= $(GENERATED_FOLDER)/$(FLEX_GENERATED) $(GENERATED_FOLDER)/$(BISON_GENERATED)
SOURCE_FILES			:= $(GENERATED_FILES) $(SOURCE_FOLDER)/*.cpp $(SOURCE_FOLDER)/**/*.cpp
TEST_FILES				:= $(GENERATED_FILES) $(SOURCE_FOLDER)/**/*.cpp $(SOURCE_FOLDER)/Arguments.cpp $(TEST_FOLDER)/*.cpp
EXECUTABLE				:= compiler
TEST_EXECUTABLE		:= tests

FILE_IN						:= $(TEST_FOLDER)/test.mc
FILE_OUT					:= a.asm


all: $(EXECUTABLE)

$(GENERATED_FOLDER)/$(FLEX_GENERATED): $(FLEX_SOURCE) $(GENERATED_FOLDER)/$(BISON_GENERATED)
	$(FLEX) $(FLEX_SOURCE)
	mkdir -p $(GENERATED_FOLDER)
	mv $(FLEX_GENERATED) $(GENERATED_FOLDER)

$(GENERATED_FOLDER)/$(BISON_GENERATED): $(BISON_SOURCE)
	$(BISON) $(BISONFLAGS) $(BISON_SOURCE)
	mkdir -p $(GENERATED_FOLDER)
	mv $(BISON_GENERATED) $(GENERATED_FOLDER)

$(EXECUTABLE): $(SOURCE_FILES)
	$(CXX) $(CXXFLAGS) -o $(EXECUTABLE) $(SOURCE_FILES)

clean:
	rm $(EXECUTABLE)
	rm $(TEST_EXECUTABLE)
	rm -r $(GENERATED_FOLDER)

$(TEST_EXECUTABLE): $(TEST_FILES)
	$(CXX) $(CXXFLAGS) -o $(TEST_EXECUTABLE) $(TEST_FILES)

test: $(TEST_EXECUTABLE)
	@./$(TEST_EXECUTABLE)

out:
	@$(MAKE) all -s
	@./$(EXECUTABLE) -o $(FILE_OUT) $(FILE_IN)
